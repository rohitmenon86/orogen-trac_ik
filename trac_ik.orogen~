name "trac_ik"
# Optionally declare the version number
# version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
import_types_from "trac_ikTypes.hpp"
# Finally, it is pretty common that headers are directly loaded from an external
# library. In this case, the library must be first used (the name is the
# library's pkg-config name) and then the header can be used. Following Rock
# conventions, a common use-case would be:
#
# using_library "trac_ik"
# import_types_from "trac_ik/CustomType.hpp"


task_context "IKSolverTask" do
    needs_configuration

    property("urdf_filepath", "std/string").
    doc("Robot urdf filepath for extracting joint limits")  
   
    property("base_link", "std/string").
    doc("Root Link for base of robot arm")  

    property("tip_link", "std/string").
    doc("Tip Link for end effector of robot arm")  

    property("timeout_in_secs", "double")

    property("error", "double")

    input_port("in_desired_frame", "base/samples/RigidBodyState").
    doc("Desired Cartesian Pose")

    input_port("in_joint_samples", "base/samples/Joints").
    doc("Initial joint values")

    output_port("out_joint_commands", "base/commands/Joints").
    doc("Desired joint commands")

    
    periodic 0.1
end

